<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="algorithm_analysis_exercises">
  <title>Algorithm Analysis: Exercises</title>
  <exercises>
          <exercise><p>Give the Big O performance of the following code fragment:</p>

            <program language="java" xml:id="big_o_nested_loop">
                <input>
                for (int i = 0; i &lt; n; i++) {
                    for (int j = 0; j &lt; n; j++) {
                        int k = i + j;
                    }
                }
                        </input>
            </program>
         </exercise>

        <exercise><p>Give the Big O performance of the following code fragment:</p>

        <program language="java" xml:id="big_o_for_loop">
            <input>
            for (int i = 0; i &lt; n; i++) {
                int k = 2 * i;
            }
                </input>
                </program>
        </exercise>

        <exercise><p>Give the Big O performance of the following code fragment:</p>

            <program language="java" xml:id="big_o_while_loop">
                <input>
            int i = n;
            while (i > 0) {
                int k = 2 * i;
                i = i / 2;
            }
            </input>
            </program>
            </exercise>

        <exercise><p>Give the Big O performance of the following code fragment:</p>

   <program language="java" xml:id="big_o_triple_nested_loop">
       <input>
       int result = 0;
       for (int i = 0; i &lt; n; i++) {
          for (int j = 0; j &lt; n; j++) {
             for (int k = 0; k &lt; n; k++) {
                result = i + j + k;
             }
          }
        }
                </input>
            </program>
        </exercise>

        <exercise><p>Give the Big O performance of the following code fragment:</p>

            <program language="python" xml:id="big_o_three_loops"><input>
       int result = 0;
       for (int i = 0; i &lt; n; i++) {
          result = i + i;
       }
       for (int j = 0; j &lt; n; j++) {
          result = j + j;
       }
       for (int k = 0; k &lt; n; k++) {
          result = k + k;
       }
          </input></program>
        </exercise>

        <exercise><p>Devise an experiment to verify that the <c>ArrayList</c> <c>indexOf</c> method is
        <m>O(n)</m>.</p></exercise>

    <exercise><p>Devise an experiment to verify that <c>get</c> and <c>put</c> are
        <m>O(1)</m> for HashMaps.</p></exercise>


    <exercise><p>Devise an experiment that compares the performance of the <c>remove</c>
   method on ArrayLists and HashMaps.</p></exercise>


   <exercise><p>Given a list of numbers in random order, write an algorithm that works in <m>O(n\log(n))</m>
to find the <m>k\text{th}</m> smallest number in the list.</p></exercise>


    <exercise><p>Can you improve the algorithm from the previous problem to be linear? Explain.</p></exercise>

</exercises>
</section>
