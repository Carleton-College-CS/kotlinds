<?xml version="1.0"?>
<section xml:id="introduction_review-of-basic-java">
  <title>Review of Basic Java</title>
  <p>In this section, we will review the programming language Java and also
            provide some more detailed examples of the ideas from the previous
            section. If you are new to Java or find that you need more information
            about any of the topics presented, we recommend that you consult a resource such as
            <url href="https://docs.oracle.com/javase/tutorial/" visual="https://docs.oracle.com/javase/tutorial/"><q>The Javaâ„¢ Tutorials</q></url>. For detailed information on the many <term>classes</term> that Java provides, see <url href="https://docs.oracle.com/en/java/javase/20/docs/api/java.base/module-summary.html">the Java API documentation</url>.
            Our goal here is to acquaint you with the language and also reinforce some of
            the concepts that will be central to later chapters.</p>
          <note><title>Java Note</title>
            <p>Java is a big language, and we can cover only some of its important parts in the next few pages.
              In the rest of the book, when there's a Java construct that we haven't covered yet, we'll put it in a
              <q>Java Note</q> like this one.
            </p>
          </note>
  <p>Java is an object-oriented programming language.
  It has a powerful set of built-in data types and control
  constructs. Although Java is a compiled language, a program named <c>jshell</c> allows you
  to try out Java statements interactively without having to write a complete program.
  When you run <c>jshell</c>, it
  displays <c>jshell&gt;</c> as its prompt and then evaluates the Java constructs you provide. For example,</p>
  <pre>jshell&gt; System.out.println("Algorithms and Data Structures")
Algorithms and Data Structures

jshell&gt; 12 * 144;
$1 ==&gt; 1728
</pre>
  <p>The first two lines show the prompt, the <c>System.out.println</c> function
  (which prints out its argument, followed by a newline), the result, and the next
  prompt.</p>
<p>The next prompt evaluates an expression; the <c>$1</c> is a temporary variable created by <c>jshell</c> to hold the calculated value. If we were to evaluate another expression, it would be assigned to <c>$2</c>, and so on.</p>

</section>
